import { CommonModule } from '@angular/common';
import { Component } from '@angular/core';
import { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';
import { ToastrService } from 'ngx-toastr';
import { PentestingService } from '../../services/pentesting.service';
import { Pentesting } from '../../models/pentesting.model';

@Component({
  selector: 'app-pentesting',
  standalone: true,
  imports: [CommonModule, ReactiveFormsModule],
  templateUrl: './pentesting.component.html',
  styleUrl: './pentesting.component.css'
})
export class PentestingComponent {
  pentestingForm: FormGroup;
  result: Pentesting | null = null;
  isLoading = false;

  constructor(
    private fb: FormBuilder,
    private pentestingService: PentestingService,
    private toastr: ToastrService
  ) {
    this.pentestingForm = this.fb.group({
      ip: ['', [Validators.required, this.isValidIP]],
      checkedValues: ['-sn', Validators.required]
    });
  }

  isValidIP(control: any): { [key: string]: boolean } | null {
    const ipRegex = /\b(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\b(?:;|$)/;
    return ipRegex.test(control.value) ? null : { invalidIP: true };
  }

  onSubmit(): void {
    if (this.pentestingForm.valid) {
      var ip = this.pentestingForm.get('ip')?.value;
      this.isLoading = true;

      this.pentestingService.runPentesting(ip).subscribe({
        next: (data: Pentesting) => {
          this.result = data;
          this.toastr.success('Your scan was successfull.', 'Success!');
          this.isLoading = false;
        },
        error: () => {
          this.toastr.error('Error running scan.', 'Error!');
          this.isLoading = false;
        }
      });
    } else {
      this.toastr.warning('Please enter a valid IP.', 'Warning!');
    }
  }
}