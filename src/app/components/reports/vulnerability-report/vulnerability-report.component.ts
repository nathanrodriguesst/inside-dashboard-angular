import { Component } from '@angular/core';
import { VulnerabilityReport } from '../../../models/vulnerability-report.model';
import { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';
import { VulnerabilityReportService } from '../../../services/vulnerability-report.service';
import { ToastrService } from 'ngx-toastr';
import { CommonModule } from '@angular/common';

@Component({
  selector: 'app-vulnerability-report',
  standalone: true,
  imports: [CommonModule, ReactiveFormsModule],
  templateUrl: './vulnerability-report.component.html',
  styleUrl: './vulnerability-report.component.css'
})
export class VulnerabilityReportComponent {
  reportsForm: FormGroup;
  results: VulnerabilityReport[] | null = null;
  
  constructor(
    private fb: FormBuilder,
    private vulnerabilityService: VulnerabilityReportService,
    private toastr: ToastrService
  ) {
    this.reportsForm = this.fb.group({
      startDate: ['', [Validators.required]],
      endDate: ['', [Validators.required]],
    })
  }

  onSubmit(): void {
    if (this.reportsForm.valid) {
      var startDate = this.reportsForm.get('startDate')?.value;
      var endDate = this.reportsForm.get('endDate')?.value;

      this.vulnerabilityService.generateReport(startDate, endDate).subscribe({
        next: (data: VulnerabilityReport[]) => {
          this.results = data;
          this.toastr.success('Report generated successfully.', 'Success!');
        },
        error: () => {
          this.toastr.error('Error generating report.', 'Error!');
        }
      });
    } else {
      this.toastr.warning('Please fill out all the fields in the form.', 'Warning!');
    }
  }
}
